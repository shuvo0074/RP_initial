      <MapView
      style={styles.map}
      region={{
          latitude: 23.764785,
          longitude:90.389719,
          latitudeDelta:0.1,
          longitudeDelta:0.1
      }}
      >
        <MapView.Marker
          coordinate={{
            latitude: 23.764785,
            longitude:90.389719
          }}
          title={'title'}
          description={'description'}
        />
        </MapView>
      
      
      
      <ScrollView contentContainerStyle={styles.container} >
        <View style={[styles.header,{backgroundColor: 'red'}]} >
          <Text style={styles.headerFonts}>
            Head Office
          </Text>
        </View>
        <Text style={styles.headerFonts}>
          Rangs Pharmaceuticals Limited
        </Text>
        <Text>
          Rangs Bhaban (Level-5),117/a,
          Bijoy Sharani,
          Old Airport Road, Tejgaon,
          Dhaka-1215,Bangladesh.
          Contact to HR and Admin:
        </Text>
        <Button title="info@rangspharma.net" onPress={this.handleEmail} />

        <Button onPress={this.callNumber}>
            +880-02-9123560
        </Button>
      </ScrollView>

from home.js
      <Text style={styles.buttonFonts}>
                Dimensions = {JSON.stringify(Dimensions.get('screen'))}{'\n'}
                isPortrait = {isPortrait() ? 'true\n' : 'false\n'}
                isLandscape = {isLandscape() ? 'true\n' : 'false\n'}
            </Text>

qCard.js
import React from 'react';
import { View,Text, StyleSheet, Dimensions } from 'react-native';
import { TabViewAnimated, TabBar, SceneMap } from 'react-native-tab-view';
import QCardData from '../data/qCardData'

class QCardComponent extends React.Component {
    constructor (props){
        super(props)
        this.state = ({
        })
      }
    
      render(){
          return(
            <View>
            <Text style={{fontWeight: 'bold', fontSize: 15}} >
            {this.props.question}
            </Text>
            <Text style={{ fontSize: 15}} >
            {this.props.answer}
            </Text>
            </View>

          )
      }
}

const initialLayout = {
  height: 0,
  width: Dimensions.get('window').width,
};

const FirstRoute = () => 
<View style={[ styles.container, { backgroundColor: 'red' } ]} >
<QCardComponent 
question= "what 1 ?"
answer= "answer 1"
/>
</View>
const SecondRoute = () => <View style={[ styles.container, { backgroundColor: 'white' } ]} 
>
<QCardComponent 
question= "what 2 ?"
answer= "answer 2"
/>
</View>
const ThirdRoute = () => <View style={[ styles.container, { backgroundColor: 'red' } ]} 
>
<QCardComponent 
question= "what 3 ?"
answer= "answer 3"
/>
</View>
const FourthRoute = () => <View style={[ styles.container, { backgroundColor: 'white' } ]} 
>
<QCardComponent 
question= "what 4 ?"
answer= "answer 4"
/>
</View>

export default class qCard extends React.Component {
  state = {
    index: 0,
    routes: [
      { key: 'first', title: 'Details' },
      { key: 'second', title: 'QCard' },
      { key: 'third', title: 'Quiz' },
      { key: 'fourth', title: 'Quiz' },

    ],
    cardIndex: 0,
  };
  renderCards(){
    return(
      <View>
      <Text style={{fontWeight: 'bold', fontSize: 15}} >
        {this.props.question}
      </Text>
      <Text style={{ fontSize: 15}} >
        {this.props.answer}
      </Text>
      </View>
    )
  }

  _handleIndexChange = index => this.setState({ index });

  _renderHeader = props => <TabBar {...props} />;

  _renderScene = SceneMap({
    first: FirstRoute,
    second: SecondRoute,
    third: ThirdRoute,
    fourth: FourthRoute,
  });

  render() {
    return (
    <View style ={{flex:1}} >
    {
      QCardData.map((card,index)=> {
      return(
      <View>
      <Text style={{fontWeight: 'bold', fontSize: 18}} >
        {card.question}
      </Text>
      <Text style={{ fontSize: 15}} >
        {card.answer}
      </Text>
      </View>
      )
      })
    }
    
    
    <TabViewAnimated
        navigationState={this.state}
        renderScene={this._renderScene}
        onIndexChange={this._handleIndexChange}
        initialLayout={initialLayout}
    >
    </TabViewAnimated>
    </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: 'white'
  },
});